Basic JavaScript
Npm
React = 3
React-JWT(Login Logout)-1
React-GarphQL-1
Mock API
json-server
React_hooks -1
Lifecyle
Depolyment
-> MERN
-> Docker
-> heroku
-> Nginx
///////////////////////////////
Basic React Native=1
Github

React-Redux =2
Testing
React-Saga -1

--------NOT--------------
API
GarphQL
Login/Logout

https://code.visualstudio.com/
https://nodejs.org/en/
https://github.com/

React is frontend Lib which help to build
single page application using component

>>>
Npm (Node Package Manager)
<<< 

>>>>>>>>>>>>>>>>>
json
JavaScript Object notation
[
    {
        name:'John',
        rollno:1
    },
    {
        name:'Aakash',
        rollno:2
    }
]


package.json
> Entry point to application
> Meta Data (Description, version)
> Scripts (Run, Test, Build)
> Package 

>>>>>>>>>>>>>>>>>
Step to generate package.json
<<<<<<<<<<<<<<<<<<<
**NodeJs must be installed in system
> go inside the folder using cmd/terminal
> npm init
> Answer all question
> type "yes"

>>>>>>>>>>>>>>>>>
Step to install packages
<<<<<<<<<<<<<<<<<<<
**NodeJs must be installed in system
> go inside the folder using cmd/terminal
> npm i packagename 

>>>>>>>>>>>>>>>>>
Step to generate react-app
<<<<<<<<<<<<<<<<<<<

#Window
>>>>>One time for new system<<<<<<
> open cmd as admin
> npm i -g create-react-app

>>>>>Next All time for same system<<<<<<
> open cmd
> create-react-app appname

#Mac/linux
>>>>>One time for new system<<<<<<
> open terminal
> sudo npm i -g create-react-app

>>>>>Next All time for same system<<<<<<
> open terminal
> create-react-app appname

>>>>>>>>>>>>>>>>>
Step to run app
<<<<<<<<<<<<<<<<<<<
> go inside the app 
> npm start
> http://localhost:3000/

/////Javascript/////
function
class
event

///////
functional
> Dumb component
> Display purpose
> cannot maintain state

class
> Logical component
> Api Call
> We can use for Display as well as logic 
> heavier than function
> can maintain state

hooks


////////////////////
state > it act like a local variable
props > way to transfer the data


component A    ====>       component B 
state of A     props       State to B

babel

//////
pass data from 

parent  ==> child   ( simple props )
child   ==> parent  ( props with function)


npm i react-router-dom 
<Link>

home
post > postdetails
profile


www.abc.com/1  > params
www.abc.com/1?name="john"  > queryparams


(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1
(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/1?roomtype=1
(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500
(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) triptype>       https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook


//////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}

/////
dummy api 
///////

npm i -g json-server 

json-server --watch db.json --port 8900

//////////////////
npm i apollo-boost apollo-graphql graphql react-apollo